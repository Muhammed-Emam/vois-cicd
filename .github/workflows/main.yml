name: Publish Docker image

on:
  push:
    branches: ['main', 'workflow_dispatch']

jobs:
  push_to_registry:
    name: Push Docker image to GCR and Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          install_components: 'gke-gcloud-auth-plugin'

      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: '${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}'
        
      # - name: Build and push Docker image to GCR
      #   env:
      #     GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
      #   run: | 
      #     gcloud auth configure-docker us-central-docker.pkg.dev
      #     docker build -t us-central1-docker.pkg.dev/verdant-future-387310/vois-repo/test:latest .
      #     docker push us-central1-docker.pkg.dev/verdant-future-387310/vois-repo/test:latest

      - name: Cache Node.js dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ hashFiles('**/package-lock.json') }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: muhammedemam/testnodejsapp

      - name: Build and push Docker image to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


      - name: deploy to gke
        env: 
          GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }} 
        run: |
          gcloud container clusters get-credentials  autopilot-cluster-1 --region us-central1
          kubectl apply -f deploymentservice.yml  

